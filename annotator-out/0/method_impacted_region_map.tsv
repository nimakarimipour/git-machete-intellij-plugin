REGION_CLASS	REGION_MEMBER	USED_MEMBER	USED_CLASS	SOURCE_TYPE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getGitMacheteRepositorySnapshot(com.intellij.openapi.actionSystem.AnActionEvent)	getData(com.intellij.openapi.actionSystem.DataKey)	com.intellij.openapi.actionSystem.AnActionEvent	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getGitMacheteRepositorySnapshot(com.intellij.openapi.actionSystem.AnActionEvent)	isLoggingAcceptable()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getGitMacheteRepositorySnapshot(com.intellij.openapi.actionSystem.AnActionEvent)	warn(java.lang.String)	kr.pe.kwonnam.slf4jlambda.LambdaLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getGitMacheteRepositorySnapshot(com.intellij.openapi.actionSystem.AnActionEvent)	log()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getBranchLayout(com.intellij.openapi.actionSystem.AnActionEvent)	getGitMacheteRepositorySnapshot(com.intellij.openapi.actionSystem.AnActionEvent)	com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getBranchLayout(com.intellij.openapi.actionSystem.AnActionEvent)	getBranchLayout()	com.virtuslab.gitmachete.backend.api.IGitMacheteRepositorySnapshot	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getBranchLayout(com.intellij.openapi.actionSystem.AnActionEvent)	isLoggingAcceptable()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getBranchLayout(com.intellij.openapi.actionSystem.AnActionEvent)	warn(java.lang.String)	kr.pe.kwonnam.slf4jlambda.LambdaLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getBranchLayout(com.intellij.openapi.actionSystem.AnActionEvent)	log()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getCurrentMacheteBranchIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	getGitMacheteRepositorySnapshot(com.intellij.openapi.actionSystem.AnActionEvent)	com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getCurrentMacheteBranchIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	getCurrentBranchIfManaged()	com.virtuslab.gitmachete.backend.api.IGitMacheteRepositorySnapshot	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getCurrentBranchNameIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	getCurrentMacheteBranchIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getCurrentBranchNameIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	getName()	com.virtuslab.gitmachete.backend.api.IManagedBranchSnapshot	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getCurrentBranchNameIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	isLoggingAcceptable()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getCurrentBranchNameIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	warn(java.lang.String)	kr.pe.kwonnam.slf4jlambda.LambdaLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getCurrentBranchNameIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	log()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getManagedBranchByName(com.intellij.openapi.actionSystem.AnActionEvent,java.lang.String)	getGitMacheteRepositorySnapshot(com.intellij.openapi.actionSystem.AnActionEvent)	com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getManagedBranchByName(com.intellij.openapi.actionSystem.AnActionEvent,java.lang.String)	getManagedBranchByName(java.lang.String)	com.virtuslab.gitmachete.backend.api.IGitMacheteRepositorySnapshot	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getManagedBranchByName(com.intellij.openapi.actionSystem.AnActionEvent,java.lang.String)	isLoggingAcceptable()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getManagedBranchByName(com.intellij.openapi.actionSystem.AnActionEvent,java.lang.String)	warn(java.lang.String)	kr.pe.kwonnam.slf4jlambda.LambdaLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	getManagedBranchByName(com.intellij.openapi.actionSystem.AnActionEvent,java.lang.String)	log()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyUnmanagedBranchName	getNameOfUnmanagedBranch(com.intellij.openapi.actionSystem.AnActionEvent)	getData(com.intellij.openapi.actionSystem.DataKey)	com.intellij.openapi.actionSystem.AnActionEvent	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyUnmanagedBranchName	getNameOfUnmanagedBranch(com.intellij.openapi.actionSystem.AnActionEvent)	isLoggingAcceptable()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyUnmanagedBranchName	getNameOfUnmanagedBranch(com.intellij.openapi.actionSystem.AnActionEvent)	warn(java.lang.String)	kr.pe.kwonnam.slf4jlambda.LambdaLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyUnmanagedBranchName	getNameOfUnmanagedBranch(com.intellij.openapi.actionSystem.AnActionEvent)	log()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeySelectedBranchName	getSelectedBranchName(com.intellij.openapi.actionSystem.AnActionEvent)	getData(com.intellij.openapi.actionSystem.DataKey)	com.intellij.openapi.actionSystem.AnActionEvent	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeySelectedBranchName	getSelectedBranchName(com.intellij.openapi.actionSystem.AnActionEvent)	isLoggingAcceptable()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeySelectedBranchName	getSelectedBranchName(com.intellij.openapi.actionSystem.AnActionEvent)	warn(java.lang.String)	kr.pe.kwonnam.slf4jlambda.LambdaLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeySelectedBranchName	getSelectedBranchName(com.intellij.openapi.actionSystem.AnActionEvent)	log()	com.virtuslab.gitmachete.frontend.actions.base.IWithLogger	SOURCE
com.virtuslab.gitmachete.frontend.actions.navigation.CheckoutParentAction	getNonExistentBranchMessage(com.intellij.openapi.actionSystem.AnActionEvent)	getCurrentBranchNameIfManaged(com.intellij.openapi.actionSystem.AnActionEvent)	com.virtuslab.gitmachete.frontend.actions.expectedkeys.IExpectsKeyGitMacheteRepository	SOURCE
